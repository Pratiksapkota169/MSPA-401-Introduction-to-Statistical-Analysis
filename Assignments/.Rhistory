lines(density(alpha.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = observed, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,0.15,ll, col = 2)
text(ul+0.015,0.15,ul, col = 2)
legend ( "topright",legend =  observed, col = "darkgreen",lty=2,lwd=2)
quantile(alpha.boot, c(.025,.975))
ll<-round(quantile(alpha.boot,probs = 0.025),4)
ul<-round(quantile(alpha.boot,probs = 0.975),4)
model <- lm(testB~testA, data = test)
lm.coeff <- round(coef(model)[1],4)
hist(alpha.boot, main = "Sampling Distribution of intercept",
freq  = FALSE, col = "lightblue", xlab = "Intercept Values")
lines(density(alpha.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coeff, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,0.15,ll, col = 2)
text(ul+0.015,0.15,ul, col = 2)
legend ( "topright",legend =  observed, col = "darkgreen",lty=2,lwd=2)
quantile(alpha.boot, c(.025,.975))
ll<-round(quantile(alpha.boot,probs = 0.025),4)
ul<-round(quantile(alpha.boot,probs = 0.975),4)
model <- lm(testB~testA, data = test)
lm.coef1 <- round(coef(model)[1],4)
hist(alpha.boot, main = "Sampling Distribution of intercept",
freq  = FALSE, col = "lightblue", xlab = "Intercept Values")
lines(density(alpha.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef1, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,0.15,ll, col = 2)
text(ul+0.015,0.15,ul, col = 2)
legend ( "topright",legend = c("Intercept:", lm.coef1))
legend ( "topright",legend = ("Intercept:", lm.coef1))
legend ( "topright",legend = list("Intercept:", lm.coef1))
legend ( "topright",legend = c("Est. Intercept:", lm.coef1))
hist(beta.boot, main = "Sampling Distribution of intercept",
freq  = FALSE, col = "lightblue", xlab = "Intercept Values")
ll<-round(quantile(beta.boot,probs = 0.025),4)
ul<-round(quantile(beta.boot,probs = 0.975),4)
hist(beta.boot, main = "Sampling Distribution of Slope",
freq  = FALSE, col = "lightblue", xlab = "Slope Values")
lines(density(beta.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef2, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,0.15,ll, col = 2)
text(ul+0.015,0.15,ul, col = 2)
legend ( "topright",legend = c("Est. Slope:", lm.coef2))
lm.coef2 <- round(coef(model)[2],4)
ll<-round(quantile(beta.boot,probs = 0.025),4)
ul<-round(quantile(beta.boot,probs = 0.975),4)
hist(beta.boot, main = "Sampling Distribution of Slope",
freq  = FALSE, col = "lightblue", xlab = "Slope Values")
lines(density(beta.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef2, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,0.15,ll, col = 2)
text(ul+0.015,0.15,ul, col = 2)
legend ( "topright",legend = c("Est. Slope:", lm.coef2))
ll<-round(quantile(beta.boot,probs = 0.025),4)
ul<-round(quantile(beta.boot,probs = 0.975),4)
hist(beta.boot, main = "Sampling Distribution of Slope",
freq  = FALSE, col = "lightblue", xlab = "Slope Values")
lines(density(beta.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef2, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,6,ll, col = 2)
text(ul+0.015,6,ul, col = 2)
legend ( "topright",legend = c("Est. Slope:", lm.coef2))
ll<-round(quantile(beta.boot,probs = 0.025),4)
ul<-round(quantile(beta.boot,probs = 0.975),4)
hist(beta.boot, main = "Sampling Distribution of Slope",
freq  = FALSE, col = "lightblue", xlab = "Slope Values")
lines(density(beta.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef2, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,6,ll, col = 2)
text(ul+0.015,6,ul, col = 2)
legend ( "topright",legend = c("Est. Slope:", lm.coef2))
cat("Bootstrapped Intercept confidence Interval: \n")
quantile(alpha.boot, c(.025,.975))
cat("Bootstrapped Slope confidence Interval: \n")
quantile(beta.boot, c(.025,.975))
print("Bootstrapped Intercept confidence Interval: \n")
quantile(alpha.boot, c(.025,.975))
print("Bootstrapped Slope confidence Interval:")
quantile(beta.boot, c(.025,.975))
df<-as.data.frame(c(alpha.boot,beta.boot))
df<-as.data.frame(cbind(alpha.boot,beta.boot))
View(df)
ggplot(data = df, aes(x = alpha.boot, y = beta.boot))+ geom_line()+ geom_point(size = 3)+
ggtitle("Plot showing Bootstrapped Slope vs Intercept")
library(ggplot2)
ggplot(data = df, aes(x = alpha.boot, y = beta.boot))+ geom_line()+ geom_point(size = 3)+
ggtitle("Plot showing Bootstrapped Slope vs Intercept")
ggplot(data = df, aes(x = alpha.boot, y = beta.boot, colour = "red"))+ geom_point(size = 3)+
ggtitle("Plot showing Bootstrapped Slope vs Intercept")
plot(alpha.boot,beta.boot)
plot(alpha.boot,beta.boot, color = "red", main = "Bootstrapped slope vs intercept")
plot(alpha.boot,beta.boot, colour = "red", main = "Bootstrapped slope vs intercept")
plot(alpha.boot,beta.boot, col = "red", main = "Bootstrapped slope vs intercept")
plot(alpha.boot,beta.boot, col = "red",title = "Bootstrapped slope vs intercept")
plot(alpha.boot,beta.boot, col = "red",main = "Bootstrapped slope vs intercept")
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "blue", xlab = "Intercepts", ylab = "Slopes")
set.seed(123)
N <- 10000
cor.boot <- numeric(N)
beta.boot <- numeric(N)
alpha.boot <- numeric(N)
n <- 49
for (i in 1:N)
{
index <- sample.int(n,n, replace = TRUE)
test1 <- test[index, ] # resampled data
#recalculate linear model estimates
tBoot.lm <- lm(testB ~ testA, data = test1)
alpha.boot[i] <- coef(tBoot.lm)[1] # new intercept
beta.boot[i] <- coef(tBoot.lm)[2] # new slope
}
print("Bootstrapped Intercept confidence Interval:")
quantile(alpha.boot, c(.025,.975))
print("Bootstrapped Slope confidence Interval:")
quantile(beta.boot, c(.025,.975))
model <- lm(testB~testA, data = test)
lm.coef1 <- round(coef(model)[1],4)
lm.coef2 <- round(coef(model)[2],4)
ll<-round(quantile(alpha.boot,probs = 0.025),4)
ul<-round(quantile(alpha.boot,probs = 0.975),4)
hist(alpha.boot, main = "Sampling Distribution of intercept",
freq  = FALSE, col = "lightblue", xlab = "Intercept Values")
lines(density(alpha.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef1, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,0.2,ll, col = 2)
text(ul+0.015,0.2,ul, col = 2)
legend ( "topright",legend = c("Est. Intercept:", lm.coef1))
ll<-round(quantile(beta.boot,probs = 0.025),4)
ul<-round(quantile(beta.boot,probs = 0.975),4)
hist(beta.boot, main = "Sampling Distribution of Slope",
freq  = FALSE, col = "lightblue", xlab = "Slope Values")
lines(density(beta.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef2, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,6,ll, col = 2)
text(ul+0.015,6,ul, col = 2)
legend ( "topright",legend = c("Est. Slope:", lm.coef2))
df<-as.data.frame(cbind(alpha.boot,beta.boot))
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "blue", xlab = "Intercepts", ylab = "Slopes")
set.seed(123)
N <- 10000
cor.boot <- numeric(N)
beta.boot <- numeric(N)
alpha.boot <- numeric(N)
n <- 49
for (i in 1:N)
{
index <- sample.int(n,n, replace = TRUE)
test1 <- test[index, ] # resampled data
#recalculate linear model estimates
tBoot.lm <- lm(testA ~ testB, data = test1)
alpha.boot[i] <- coef(tBoot.lm)[1] # new intercept
beta.boot[i] <- coef(tBoot.lm)[2] # new slope
}
print("Bootstrapped Intercept confidence Interval:")
quantile(alpha.boot, c(.025,.975))
print("Bootstrapped Slope confidence Interval:")
quantile(beta.boot, c(.025,.975))
model <- lm(testA~testB, data = test)
lm.coef1 <- round(coef(model)[1],4)
lm.coef2 <- round(coef(model)[2],4)
ll<-round(quantile(alpha.boot,probs = 0.025),4)
ul<-round(quantile(alpha.boot,probs = 0.975),4)
hist(alpha.boot, main = "Sampling Distribution of intercept",
freq  = FALSE, col = "lightblue", xlab = "Intercept Values")
lines(density(alpha.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef1, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,0.2,ll, col = 2)
text(ul+0.015,0.2,ul, col = 2)
legend ( "topright",legend = c("Est. Intercept:", lm.coef1))
ll<-round(quantile(beta.boot,probs = 0.025),4)
ul<-round(quantile(beta.boot,probs = 0.975),4)
hist(beta.boot, main = "Sampling Distribution of Slope",
freq  = FALSE, col = "lightblue", xlab = "Slope Values")
lines(density(beta.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef2, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,6,ll, col = 2)
text(ul+0.015,6,ul, col = 2)
legend ( "topright",legend = c("Est. Slope:", lm.coef2))
df<-as.data.frame(cbind(alpha.boot,beta.boot))
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "blue", xlab = "Intercepts", ylab = "Slopes")
set.seed(123)
N <- 10000
cor.boot <- numeric(N)
beta.boot <- numeric(N)
alpha.boot <- numeric(N)
n <- 49
for (i in 1:N)
{
index <- sample.int(n,n, replace = TRUE)
test1 <- test[index, ] # resampled data
#recalculate linear model estimates
tBoot.lm <- lm(testB ~ testA, data = test1)
alpha.boot[i] <- coef(tBoot.lm)[1] # new intercept
beta.boot[i] <- coef(tBoot.lm)[2] # new slope
}
print("Bootstrapped Intercept confidence Interval:")
quantile(alpha.boot, c(.025,.975))
print("Bootstrapped Slope confidence Interval:")
quantile(beta.boot, c(.025,.975))
model <- lm(testB~testA, data = test)
lm.coef1 <- round(coef(model)[1],4)
lm.coef2 <- round(coef(model)[2],4)
ll<-round(quantile(alpha.boot,probs = 0.025),4)
ul<-round(quantile(alpha.boot,probs = 0.975),4)
hist(alpha.boot, main = "Sampling Distribution of intercept",
freq  = FALSE, col = "lightblue", xlab = "Intercept Values")
lines(density(alpha.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef1, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,0.2,ll, col = 2)
text(ul+0.015,0.2,ul, col = 2)
legend ( "topright",legend = c("Est. Intercept:", lm.coef1))
ll<-round(quantile(beta.boot,probs = 0.025),4)
ul<-round(quantile(beta.boot,probs = 0.975),4)
hist(beta.boot, main = "Sampling Distribution of Slope",
freq  = FALSE, col = "lightblue", xlab = "Slope Values")
lines(density(beta.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef2, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,6,ll, col = 2)
text(ul+0.015,6,ul, col = 2)
legend ( "topright",legend = c("Est. Slope:", lm.coef2))
df<-as.data.frame(cbind(alpha.boot,beta.boot))
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "blue", xlab = "Intercepts", ylab = "Slopes")
abline(v = lm.coef1, col = "red", lw=2, lty=2)
abline(h = lm.coef2, col = "darkblue", lw=2,lty = 2)
legend ( "topright",legend = c("Median of DriversKilled = 118.5", "Median of Month = 96.5"), col = c("darkblue", "red"),lty=c(2,2),lw=2)
df<-as.data.frame(cbind(alpha.boot,beta.boot))
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "darkgreen", xlab = "Intercepts", ylab = "Slopes")
abline(v = lm.coef1, col = "red", lw=2, lty=2)
abline(h = lm.coef2, col = "darkblue", lw=2,lty = 2)
legend ( "topright",legend = c(lm.coef1, lm.coef2), col = c("darkblue", "red"),lty=c(2,2),lw=2)
df<-as.data.frame(cbind(alpha.boot,beta.boot))
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "lightgreen", xlab = "Intercepts", ylab = "Slopes")
abline(v = lm.coef1, col = "red", lw=2, lty=2)
abline(h = lm.coef2, col = "darkblue", lw=2,lty = 2)
legend ( "topright",legend = c(lm.coef1, lm.coef2), col = c("darkblue", "red"),lty=c(2,2),lw=2)
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "green", xlab = "Intercepts", ylab = "Slopes")
abline(v = lm.coef1, col = "red", lw=2, lty=2)
abline(h = lm.coef2, col = "darkblue", lw=2,lty = 2)
legend ( "topright",legend = c(lm.coef1, lm.coef2), col = c("darkblue", "red"),lty=c(2,2),lw=2)
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "darkgreen",lty=2, xlab = "Intercepts", ylab = "Slopes")
abline(v = lm.coef1, col = "red", lw=2, lty=2)
abline(h = lm.coef2, col = "darkblue", lw=2,lty = 2)
legend ( "topright",legend = c(lm.coef1, lm.coef2), col = c("darkblue", "red"),lty=c(2,2),lw=2)
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "darkgreen",lty=4, xlab = "Intercepts", ylab = "Slopes")
abline(v = lm.coef1, col = "red", lw=2, lty=2)
abline(h = lm.coef2, col = "darkblue", lw=2,lty = 2)
legend ( "topright",legend = c(lm.coef1, lm.coef2), col = c("darkblue", "red"),lty=c(2,2),lw=2)
set.seed(123)
N <- 10000
beta.boot <- numeric(N)
alpha.boot <- numeric(N)
n <- 49
for (i in 1:N)
{
index <- sample.int(n,n, replace = TRUE)
test1 <- test[index, ] # resampled data
#recalculate linear model estimates
tBoot.lm <- lm(testB ~ testA, data = test1)
alpha.boot[i] <- coef(tBoot.lm)[1] # new intercept
beta.boot[i] <- coef(tBoot.lm)[2] # new slope
}
print("Bootstrapped Intercept confidence Interval:")
quantile(alpha.boot, c(.025,.975))
print("Bootstrapped Slope confidence Interval:")
quantile(beta.boot, c(.025,.975))
model <- lm(testB~testA, data = test)
lm.coef1 <- round(coef(model)[1],4)
lm.coef2 <- round(coef(model)[2],4)
ll<-round(quantile(alpha.boot,probs = 0.025),4)
ul<-round(quantile(alpha.boot,probs = 0.975),4)
hist(alpha.boot, main = "Sampling Distribution of intercept",
freq  = FALSE, col = "lightblue", xlab = "Intercept Values")
lines(density(alpha.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef1, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,0.2,ll, col = 2)
text(ul+0.015,0.2,ul, col = 2)
legend ( "topright",legend = c("Est. Intercept:", lm.coef1))
ll<-round(quantile(beta.boot,probs = 0.025),4)
ul<-round(quantile(beta.boot,probs = 0.975),4)
hist(beta.boot, main = "Sampling Distribution of Slope",
freq  = FALSE, col = "lightblue", xlab = "Slope Values")
lines(density(beta.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef2, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,6,ll, col = 2)
text(ul+0.015,6,ul, col = 2)
legend ( "topright",legend = c("Est. Slope:", lm.coef2))
df<-as.data.frame(cbind(alpha.boot,beta.boot))
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "darkgreen", xlab = "Intercepts", ylab = "Slopes")
abline(v = lm.coef1, col = "red", lw=2, lty=2)
abline(h = lm.coef2, col = "darkblue", lw=2,lty = 2)
legend ( "topright",legend = c(lm.coef1, lm.coef2), col = c("darkblue", "red"),lty=c(2,2),lw=2)
ll<-round(quantile(alpha.boot,probs = 0.025),4)
ul<-round(quantile(alpha.boot,probs = 0.975),4)
hist(alpha.boot, main = "Sampling Distribution of intercept",
freq  = FALSE, col = "lightblue", xlab = "Intercept Values")
lines(density(alpha.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef1, col = "darkgreen",lty = 2, lwd=2)
text(ll-1,0.15,ll, col = 2)
text(ul+1,0.15,ul, col = 2)
legend ( "topright",legend = c("Est. Intercept:", lm.coef1))
knitr::opts_chunk$set(echo = TRUE)
testA <- c(58,49.7,51.4,51.8,57.5,52.4,47.8,45.7,51.7,46,50.4,61.9,49.6,61.6,54,54.9,49.7,
47.9,59.8,52.3,48.4,49.1,53.7,48.4,47.6,50.8,58.2,59.8,42.7,47.8,51.4,50.9,49.4,
64.1,51.7,48.7,48.3,46.1,47.3,57.7,41.8,51.5,46.9,42,50.5,46.3,44,59.3,52.8)
testB <- c(56.1,51.5,52.8,52.5,57.4,53.86,48.5,49.8,53.9,49.3,51.8,60,51.4,60.2,53.8,52,
49,49.7,59.9,51.2,51.6,49.3,53.8,50.7,50.8,49.8,59,56.6,47.7,47.2,50.9,53.3,
50.6,60.1,50.6,50,48.5,47.8,47.8,55.1,44.9,51.9,50.3,44.3,52,49,46.2,59,52)
test <- as.data.frame(cbind(testA,testB))
str(test)
summary(test)
plot(test$testA,test$testB)
r <- cor(test$testA,test$testB)
r
fisherz <- 0.5*log((1+r)/(1-r))
sigmaz <- 1/sqrt(49-3)
zl.95 <- fisherz - qnorm(0.975,0,1,lower.tail = TRUE)*sigmaz
zu.95 <- fisherz + qnorm(0.975,0,1,lower.tail = TRUE)*sigmaz
rl.95 <- tanh(zl.95)
ru.95 <- tanh(zu.95)
cat("95% confidence interval for rho:", c(rl.95,ru.95),'\n')
cor.test(test$testA,testB)
set.seed(123)
N <- 10000
n <- 49
get.cor<-function(data){
return(cor(data$testA,data$testB))
}
m.corr <- replicate(N,get.cor(test[sample.int(n,n,replace = TRUE),]))
summary(m.corr)
cells <- seq(0.8,1.05, by = 0.005)
hist(m.corr, main = "Correlation Coefficient Sampling Distribution",breaks = cells,
freq  = FALSE, col = "red", xlab = "Correlation Values")
lines(density(m.corr), lwd=2.5, col = "darkblue")
abline(v= quantile(m.corr, probs = 0.025), col = "blue", lwd = 2, lty = 2)
abline(v= quantile(m.corr, probs = 0.975), col = "blue", lwd = 2, lty = 2)
abline(v= mean(m.corr), col = "darkgreen", lwd = 2, lty = 2)
text(quantile(m.corr, probs = 0.025)-0.015,20,round(quantile(m.corr, probs = 0.025),4), col = 2)
text(quantile(m.corr, probs = 0.975)+0.015,20,round(quantile(m.corr, probs = 0.975),4), col = 2)
legend ( "topright",legend = c("Mean = 0.9481"), col = c("darkgreen"),lty=c(2))
#legend ( "topright",legend =  round(mean(m.corr),4), col = c("darkgreen"),lty=c(2))
print("95% confidence interval for population correlation coefficient: ")
round(c(quantile(m.corr, probs = c(0.025)), quantile(m.corr, probs = c(0.975))), digits = 4)
set.seed(123)
N <- 10000
beta.boot <- numeric(N)
alpha.boot <- numeric(N)
n <- 49
for (i in 1:N)
{
index <- sample.int(n,n, replace = TRUE)
test1 <- test[index, ] # resampled data
#recalculate linear model estimates
tBoot.lm <- lm(testB ~ testA, data = test1)
alpha.boot[i] <- coef(tBoot.lm)[1] # new intercept
beta.boot[i] <- coef(tBoot.lm)[2] # new slope
}
print("Bootstrapped Intercept confidence Interval:")
quantile(alpha.boot, c(.025,.975))
print("Bootstrapped Slope confidence Interval:")
quantile(beta.boot, c(.025,.975))
model <- lm(testB~testA, data = test)
lm.coef1 <- round(coef(model)[1],4)
lm.coef2 <- round(coef(model)[2],4)
ll<-round(quantile(alpha.boot,probs = 0.025),4)
ul<-round(quantile(alpha.boot,probs = 0.975),4)
hist(alpha.boot, main = "Sampling Distribution of intercept",
freq  = FALSE, col = "lightblue", xlab = "Intercept Values")
lines(density(alpha.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef1, col = "darkgreen",lty = 2, lwd=2)
text(ll-1,0.15,ll, col = 2)
text(ul+1,0.15,ul, col = 2)
legend ( "topright",legend = c("Est. Intercept:", lm.coef1))
ll<-round(quantile(beta.boot,probs = 0.025),4)
ul<-round(quantile(beta.boot,probs = 0.975),4)
hist(beta.boot, main = "Sampling Distribution of Slope",
freq  = FALSE, col = "lightblue", xlab = "Slope Values")
lines(density(beta.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef2, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,6,ll, col = 2)
text(ul+0.015,6,ul, col = 2)
legend ( "topright",legend = c("Est. Slope:", lm.coef2))
df<-as.data.frame(cbind(alpha.boot,beta.boot))
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "darkgreen", xlab = "Intercepts", ylab = "Slopes")
abline(v = lm.coef1, col = "red", lw=2, lty=2)
abline(h = lm.coef2, col = "darkblue", lw=2,lty = 2)
legend ( "topright",legend = c(lm.coef1, lm.coef2), col = c("darkblue", "red"),lty=c(2,2),lw=2)
knitr::opts_chunk$set(echo = TRUE)
testA <- c(58,49.7,51.4,51.8,57.5,52.4,47.8,45.7,51.7,46,50.4,61.9,49.6,61.6,54,54.9,49.7,
47.9,59.8,52.3,48.4,49.1,53.7,48.4,47.6,50.8,58.2,59.8,42.7,47.8,51.4,50.9,49.4,
64.1,51.7,48.7,48.3,46.1,47.3,57.7,41.8,51.5,46.9,42,50.5,46.3,44,59.3,52.8)
testB <- c(56.1,51.5,52.8,52.5,57.4,53.86,48.5,49.8,53.9,49.3,51.8,60,51.4,60.2,53.8,52,
49,49.7,59.9,51.2,51.6,49.3,53.8,50.7,50.8,49.8,59,56.6,47.7,47.2,50.9,53.3,
50.6,60.1,50.6,50,48.5,47.8,47.8,55.1,44.9,51.9,50.3,44.3,52,49,46.2,59,52)
test <- as.data.frame(cbind(testA,testB))
str(test)
summary(test)
plot(test$testA,test$testB)
r <- cor(test$testA,test$testB)
r
fisherz <- 0.5*log((1+r)/(1-r))
sigmaz <- 1/sqrt(49-3)
zl.95 <- fisherz - qnorm(0.975,0,1,lower.tail = TRUE)*sigmaz
zu.95 <- fisherz + qnorm(0.975,0,1,lower.tail = TRUE)*sigmaz
rl.95 <- tanh(zl.95)
ru.95 <- tanh(zu.95)
cat("95% confidence interval for correlation coefficient:", c(rl.95,ru.95),'\n')
cor.test(test$testA,testB)
set.seed(123)
N <- 10000
n <- 49
get.cor<-function(data){
return(cor(data$testA,data$testB))
}
m.corr <- replicate(N,get.cor(test[sample.int(n,n,replace = TRUE),]))
summary(m.corr)
cells <- seq(0.8,1.05, by = 0.005)
hist(m.corr, main = "Bootstrap Distribution of Correlation Coefficient",breaks = cells,
freq  = FALSE, col = "red", xlab = "Correlation Values")
lines(density(m.corr), lwd=2.5, col = "darkblue")
abline(v= quantile(m.corr, probs = 0.025), col = "blue", lwd = 2, lty = 2)
abline(v= quantile(m.corr, probs = 0.975), col = "blue", lwd = 2, lty = 2)
abline(v= mean(m.corr), col = "darkgreen", lwd = 2, lty = 2)
text(quantile(m.corr, probs = 0.025)-0.015,20,round(quantile(m.corr, probs = 0.025),4), col = 2)
text(quantile(m.corr, probs = 0.975)+0.015,20,round(quantile(m.corr, probs = 0.975),4), col = 2)
legend ( "topright",legend = c("Mean = 0.9481"), col = c("darkgreen"),lty=c(2))
#legend ( "topright",legend =  round(mean(m.corr),4), col = c("darkgreen"),lty=c(2))
print("95% confidence interval for bootstrapped correlation coefficient: ")
round(c(quantile(m.corr, probs = c(0.025)), quantile(m.corr, probs = c(0.975))), digits = 4)
set.seed(123)
N <- 10000
beta.boot <- numeric(N)
alpha.boot <- numeric(N)
n <- 49
for (i in 1:N)
{
index <- sample.int(n,n, replace = TRUE)
test1 <- test[index, ] # resampled data
#recalculate linear model estimates
tBoot.lm <- lm(testB ~ testA, data = test1)
alpha.boot[i] <- coef(tBoot.lm)[1] # new intercept
beta.boot[i] <- coef(tBoot.lm)[2] # new slope
}
print("Bootstrapped Intercept confidence Interval:")
quantile(alpha.boot, c(.025,.975))
print("Bootstrapped Slope confidence Interval:")
quantile(beta.boot, c(.025,.975))
model <- lm(testB~testA, data = test)
lm.coef1 <- round(coef(model)[1],4)
lm.coef2 <- round(coef(model)[2],4)
ll<-round(quantile(alpha.boot,probs = 0.025),4)
ul<-round(quantile(alpha.boot,probs = 0.975),4)
hist(alpha.boot, main = "Bootstrap Distribution of intercept",
freq  = FALSE, col = "lightblue", xlab = "Intercept Values")
lines(density(alpha.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef1, col = "darkgreen",lty = 2, lwd=2)
text(ll-1,0.15,ll, col = 2)
text(ul+1,0.15,ul, col = 2)
legend ( "topright",legend = c("Est. Intercept:", lm.coef1))
ll<-round(quantile(beta.boot,probs = 0.025),4)
ul<-round(quantile(beta.boot,probs = 0.975),4)
hist(beta.boot, main = "Bootstrap Distribution of Slope",
freq  = FALSE, col = "lightblue", xlab = "Slope Values")
lines(density(beta.boot), lwd=2.5, col = "red")
abline(v= ll, col = "blue", lwd = 2, lty = 2)
abline(v= ul, col = "blue", lwd = 2, lty = 2)
abline(v = lm.coef2, col = "darkgreen",lty = 2, lwd=2)
text(ll-0.015,6,ll, col = 2)
text(ul+0.015,6,ul, col = 2)
legend ( "topright",legend = c("Est. Slope:", lm.coef2))
df<-as.data.frame(cbind(alpha.boot,beta.boot))
plot(df$alpha.boot,df$beta.boot, main = "Scatter plot of Bootstrapped Slope vs Intercept", col = "darkgreen", xlab = "Intercepts", ylab = "Slopes")
abline(v = lm.coef1, col = "red", lw=2, lty=2)
abline(h = lm.coef2, col = "darkblue", lw=2,lty = 2)
legend ( "topright",legend = c(lm.coef1, lm.coef2), col = c("darkblue", "red"),lty=c(2,2),lw=2)
