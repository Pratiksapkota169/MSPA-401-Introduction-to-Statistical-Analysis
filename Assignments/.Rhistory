home_prices <- read.csv("C:/NorthWestern_Courses/MSPA-401-Introduction-to-Statistical-Analysis/R_Resources/Lessons in R_Complete/Lessons in R_Data Files/home_prices.csv")
View(home_prices)
home_prices <- read.csv("C:/NorthWestern_Courses/MSPA-401-Introduction-to-Statistical-Analysis/R_Resources/Lessons in R_Complete/Lessons in R_Data Files/home_prices.csv")
str(home_prices)
home_prices$BATHS<-factor(home_prices$BATHS)
str(home_prices)
home_prices <- read.csv("C:/NorthWestern_Courses/MSPA-401-Introduction-to-Statistical-Analysis/R_Resources/Lessons in R_Complete/Lessons in R_Data Files/home_prices.csv")
str(home_prices)
price<-home_prices$PRICE
srs<-sample(price,12)
mean(srs)
srs
mean(srs)
set.seed(9999)
srs<-sample(price,12)
srs
mean(srs)
rep(0,11)
seq(1,6)
seq(7,110,7)
seq(7,115,7)
seq(7,115,10)
seq(2, 9, length = 8)
seq(11,1)
index<-seq(1,117,10)
index
index<-seq(7,117,10)
index
ss<-price[index]
ss
mean(ss)
srs
mean(srs)
ss
mean(ss)
mean(price)
summary(srs)
summary(ss)
hist(srs)
hist(ss)
stem(srs)
stem(ss)
srs
sort(srs)
par(mfrow=c(2,2))
hist(srs)
hist(ss)
stem(srs)
stem(ss)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
hist(srs)
hist(ss)
stem(srs)
stem(ss)
par(mfrow=c(1,1))
tax<- home_prices$TAX
hist(price)
hist(tax)
plot(price,tax)
stem(tax)
par(mfrow=c(2,1))
hist(price)
hist(tax)
par(mfcol=c(2,1))
hist(price)
hist(tax)
par(mfcol=c(1,2))
hist(price)
hist(tax)
par(mfcol=c(1,1))
par(mfrow=c(2,1))
hist(price)
hist(tax)
par(mfcol=c(1,1))
price
View(home_prices)
summary(price)
summary(tax)
with(home_prices,plot(price,tax))
par(mfrow=c(1,1))
summary(price)
summary(tax)
with(home_prices,plot(price,tax))
seq(1300,5500,600)
with(home_prices,hist(price,breaks=seq(1300,5500,600)))
with(home_prices,hist(tax,breaks=seq(500,4500,500)))
seq(500,4500,500)
##Lesson3
mileage <- read.csv("C:/NorthWestern_Courses/MSPA-401-Introduction-to-Statistical-Analysis/R_Resources/Lessons in R_Complete/Lessons in R_Data Files/mileage.csv")
str(mileage)
head(mileage)
?tapply()
tapply(mileage$MPG,mileage$CLASS,mean)
tapply(mileage$MPG,mileage$CLASS,sd)
tapply(mileage$HP,mileage$CLASS,mean)
tapply(mileage$HP,mileage$CLASS,sd)
hist(mileage$MPG)
hist(mileage$HP)
summary(mileage)
mpg_class<-aggregate(MPG~CLASS,mileage,mean)
mpg_class$sd<-aggregate(MPG~CLASS,mileage,sd)
mpg_class
mpg_class<-aggregate(MPG~CLASS,mileage,mean)
mpg_class$sd<-aggregate(MPG~CLASS,mileage,sd)[,2]
mpg_class
hp_class<-aggregate(HP~CLASS,mileage,mean)
hp_class$sd<-aggregate(HP~CLASS,mileage,sd)[,2]
hp_class
shoppers <- read.csv("C:/NorthWestern_Courses/MSPA-401-Introduction-to-Statistical-Analysis/R_Resources/Lessons in R_Complete/Lessons in R_Data Files/shoppers.csv")
summary(shoppers)
hist(shoppers$Spending)
library("psych")
basicstats(shoppers)
describe(shoppers)
quantile(shoppers$Spending,0.1)
range <- function(x) {max(x, na.rm = TRUE) - min(x, na.rm = TRUE)}
range <- function(x) {max(x, na.rm = TRUE) - min(x, na.rm = TRUE)}
summary_stats <- function(x) {
stats <- data.frame(rbind(mean(x, na.rm = TRUE), median(x, na.rm = TRUE), range(x), sd(x, na.rm = TRUE), var(x, na.rm = TRUE), quantile(x, probs = c(0.25), na.rm = TRUE), quantile(x, probs = c(0.75), na.rm = TRUE), quantile(x, probs = c(0.10), na.rm = TRUE)), row.names = c("Mean", "Median", "Range", "StdDev", "Var", "Q1", "Q3", "P10")) colnames(stats) <- "Value"
return(stats) }
summary_stats <- function(x) {
stats <- data.frame(rbind(mean(x, na.rm = TRUE), median(x, na.rm = TRUE), range(x), sd(x, na.rm = TRUE), var(x, na.rm = TRUE), quantile(x, probs = c(0.25), na.rm = TRUE), quantile(x, probs = c(0.75), na.rm = TRUE), quantile(x, probs = c(0.10), na.rm = TRUE)), row.names = c("Mean", "Median", "Range", "StdDev", "Var", "Q1", "Q3", "P10")) colnames(stats) <- "Value"
return(stats)
}
summary_stats <- function(x) {
stats <- data.frame(rbind(mean(x, na.rm = TRUE),
median(x, na.rm = TRUE),
range(x), sd(x, na.rm = TRUE),
var(x, na.rm = TRUE),
quantile(x, probs = c(0.25), na.rm = TRUE),
quantile(x, probs = c(0.75), na.rm = TRUE),
quantile(x, probs = c(0.10), na.rm = TRUE)),
row.names = c("Mean", "Median", "Range", "StdDev", "Var", "Q1", "Q3", "P10"))
colnames(stats) <- "Value"
return(stats)
}
summary_stats(shoppers$Spending)
range(shoppers$Spending)
pontus <- read.csv("C:/NorthWestern_Courses/MSPA-401-Introduction-to-Statistical-Analysis/R_Resources/Lessons in R_Complete/Lessons in R_Data Files/pontus.csv")
str(pontus)
summary_stats(pontus$Ht)
summary_stats(pontus$Age)
summary_stats(pontus$Ht)
summary_stats(pontus$HtOpp)
apply(pontus[,5:6],2,summary_stats)
tapply(pontus[,5:6],2,summary_stats)
apply(pontus[,5:6],2,summary_stats)
df<-apply(pontus[,5:6],2,summary_stats)
View(df)
apply(pontus[,5:6],2,summary_stats)
diff<-diff(pontus$Ht,pontus$HtOpp)
diff.p<-diff(pontus$Ht,pontus$HtOpp)
diff.p<-setdiff(pontus$Ht,pontus$HtOpp)
diff.p<-(pontus$Ht-pontus$HtOpp)
hist(diff.p)
boxplot(diff.p)
mean(diff.p)
View(pontus)
with(pontus, boxplot(Ht, HtOpp, names = c("President's Height", "Opponent's Height")))
mean(diff.p,na.rm=TRUE)
mean(pontus$Ht,na.rm=TRUE)-mean(pontus$HtOpp,na.rm=TRUE)
mean(pontus$Ht,na.rm=TRUE)
mean(pontus$HtOpp,na.rm=TRUE)
geyser <- read.csv("C:/NorthWestern_Courses/MSPA-401-Introduction-to-Statistical-Analysis/R_Resources/Lessons in R_Complete/Lessons in R_Data Files/geyser.csv")
str(geyser)
summary(geyser)
with(geyser,hist(WEEK1, WEEK2,names=c("W1","W2")))
with(geyser,boxplot(WEEK1, WEEK2,names=c("W1","W2")))
par(mfrow=c(2,1))
hist(geyser$WEEK1)
hist(geyser$WEEK2)
par(mfrow=c(1,2))
hist(geyser$WEEK1)
hist(geyser$WEEK2)
par(mfrow=c(1,1))
with(geyser,boxplot(WEEK1, WEEK2,names=c("W1","W2")))
apply(geyser,2,summary)
par(mfrow=c(1,1))
# DO NOT ADD OR REVISE CODE HERE
knitr::opts_chunk$set(echo = TRUE)
set.seed(123)
sample.one <- table(rbinom(10000, 10, 0.45)) / 10000
sample.two <- table(rbinom(10000, 10, 0.55)) / 10000
successes <- seq(0, 10)
sum(sample.one * successes) # [1] 4.4827
sum(sample.two * successes) # [1] 5.523
counts <- rbind(sample.one, sample.two)
barplot(counts, main = "Comparison of Binomial Sample Proportions",
ylab = "Frequency", ylim = c(0,0.3),xlab = "Number of Successes",
beside = TRUE, col = c("darkblue","red"),legend = rownames(counts),
names.arg = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"))
