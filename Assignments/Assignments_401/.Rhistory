geom_point(aes(color = CLASS),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by CLASS")+theme(legend.position = "bottom")
grid.arrange(p1,p2,nrow=1)
p3<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("SHUCK vs VOLUME by TYPE")+theme(legend.position = "bottom")
p4<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by TYPE")+theme(legend.position = "bottom")
grid.arrange(p3,p4,nrow=1)
bartlett.test(L_SHUCK ~ CLASS, mydata)
bartlett.test(L_VOLUME ~ CLASS, mydata)
bartlett.test(L_SHUCK ~ TYPE, mydata)
bartlett.test(L_VOLUME ~ TYPE, mydata)
L_SHUCK<-log10(mydata$SHUCK)
L_VOLUME<-log10(mydata$VOLUME)
library(gridExtra)
p1<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("SHUCK vs VOLUME by CLASS")+theme(legend.position = "bottom")
p2<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by CLASS")+theme(legend.position = "bottom")
grid.arrange(p1,p2,nrow=1)
p3<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("SHUCK vs VOLUME by TYPE")+theme(legend.position = "bottom")
p4<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by TYPE")+theme(legend.position = "bottom")
grid.arrange(p3,p4,nrow=1)
bartlett.test(L_SHUCK ~ CLASS, mydata)
bartlett.test(L_VOLUME ~ CLASS, mydata)
bartlett.test(L_SHUCK ~ TYPE, mydata)
bartlett.test(L_VOLUME ~ TYPE, mydata)
bartlett.test(SHUCK ~ CLASS, mydata)
bartlett.test(VOLUME ~ CLASS, mydata)
bartlett.test(SHUCK ~ TYPE, mydata)
bartlett.test(VOLUME ~ TYPE, mydata)
L_SHUCK<-log10(mydata$SHUCK)
L_VOLUME<-log10(mydata$VOLUME)
library(gridExtra)
p1<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("SHUCK vs VOLUME by CLASS")+theme(legend.position = "bottom")
p2<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by CLASS")+theme(legend.position = "bottom")
grid.arrange(p1,p2,nrow=1)
p3<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("SHUCK vs VOLUME by TYPE")+theme(legend.position = "bottom")
p4<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by TYPE")+theme(legend.position = "bottom")
grid.arrange(p3,p4,nrow=1)
# Perform the following steps to start the assignment.
# 1) Load/attach the following packages via library():  flux, ggplot2, gridExtra, moments, rockchalk, car.
# NOTE:  packages must be installed via install.packages() before they can be loaded.
library(flux)
library(ggplot2)
library(gridExtra)
library(moments)
library(rockchalk)
library(car)
# 2) Use the "mydata.csv" file from Assignment #1 or use the file posted on the course site.  Reading
# the files into R will require sep = "" or sep = " " to format data properly.  Use str() to check file
# structure.
# mydata <- read.csv("mydata.csv", sep = ",")
# mydata <- read.csv(file.path("c:...", "mydata.csv"), sep = ",")
mydata <- read.csv(file.path("mydata.csv"), sep = ",")
str(mydata)
ratio <- mydata$RATIO
par(mfrow = c(1,2))
hist(ratio, main = "Histogram of RATIO", col = "red", xlab = "RATIO")
qqnorm(ratio, col = "blue", main = "Q-Q plot of RATIO")
qqline(ratio, col = "red")
par(mfrow = c(1,1))
print("Skewness of RATIO:")
rockchalk::skewness(ratio,unbiased = FALSE)
print("Kurtosis of RATIO:")
rockchalk::kurtosis(ratio,excess=FALSE, unbiased = FALSE)
L_RATIO<- log10(mydata$RATIO)
par(mfrow = c(1,2))
hist(L_RATIO, main = "Histogram of L_RATIO", col = "red", xlab = "L_RATIO")
qqnorm(L_RATIO, col = "blue", main = "Q-Q plot of L_RATIO")
qqline(L_RATIO, col = "red")
par(mfrow = c(1,1))
print("Skewness of L_RATIO:")
rockchalk::skewness(L_RATIO,unbiased = FALSE)
print("Kurtosis of L_RATIO:")
rockchalk::kurtosis(L_RATIO,excess=FALSE, unbiased = FALSE)
boxplot(log10(RATIO)~CLASS, col = "green", range = 1.5, data = mydata, main = "Box plot of L_RATIO by CLASS")
bartlett.test(L_RATIO ~ CLASS, mydata)
anova1 <- aov(L_RATIO ~ CLASS*SEX, data=mydata)
summary(anova1)
anova2 <- aov(L_RATIO ~ CLASS+SEX, data=mydata)
summary(anova2)
# library(HH)
# interaction2wt(L_RATIO~CLASS*SEX, data=mydata)
TukeyHSD(anova2)
mydata$TYPE <- combineLevels(mydata$SEX, levs = c("F","M"), "ADULT")
par(mfrow = c(1,2))
hist(mydata[mydata[,11]=="I", "VOLUME"],  col = "red", main = "Infant VOLUME", xlab = "")
hist(mydata[mydata[,11]=="ADULT", "VOLUME"],  col = "green", main = "Adult VOLUME", xlab = "")
par(mfrow = c(1,1))
L_SHUCK<-log10(mydata$SHUCK)
L_VOLUME<-log10(mydata$VOLUME)
library(gridExtra)
p1<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("SHUCK vs VOLUME by CLASS")+theme(legend.position = "bottom")
p2<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by CLASS")+theme(legend.position = "bottom")
grid.arrange(p1,p2,nrow=1)
p3<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("SHUCK vs VOLUME by TYPE")+theme(legend.position = "bottom")
p4<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by TYPE")+theme(legend.position = "bottom")
grid.arrange(p3,p4,nrow=1)
L_SHUCK<-log10(mydata$SHUCK)
L_VOLUME<-log10(mydata$VOLUME)
library(gridExtra)
p1<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("SHUCK vs VOLUME by CLASS")+theme(legend.position = "bottom")
p2<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by CLASS")+theme(legend.position = "bottom")
grid.arrange(p1,p2,nrow=1)
p3<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("SHUCK vs VOLUME by TYPE")+theme(legend.position = "bottom")
p4<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by TYPE")+theme(legend.position = "bottom")
grid.arrange(p3,p4,nrow=1)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
L_SHUCK<-log10(mydata$SHUCK)
L_VOLUME<-log10(mydata$VOLUME)
library(gridExtra)
p1<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("SHUCK vs VOLUME by CLASS")+theme(legend.position = "bottom")
p2<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by CLASS")+theme(legend.position = "bottom")
grid.arrange(p1,p2,nrow=1)
p3<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("SHUCK vs VOLUME by TYPE")+theme(legend.position = "bottom")
p4<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by TYPE")+theme(legend.position = "bottom")
grid.arrange(p3,p4,nrow=1)
L_SHUCK<-log10(mydata$SHUCK)
L_VOLUME<-log10(mydata$VOLUME)
library(gridExtra)
p1<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("SHUCK vs VOLUME by CLASS")+theme(legend.position = "bottom")
p2<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = CLASS, shape=TYPE),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by CLASS")+theme(legend.position = "bottom")
grid.arrange(p1,p2,nrow=1)
p3<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("SHUCK vs VOLUME by TYPE")+theme(legend.position = "bottom")
p4<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by TYPE")+theme(legend.position = "bottom")
grid.arrange(p3,p4,nrow=1)
L_SHUCK<-log10(mydata$SHUCK)
L_VOLUME<-log10(mydata$VOLUME)
library(gridExtra)
p1<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("SHUCK vs VOLUME by CLASS")+theme(legend.position = "bottom")
p2<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by CLASS")+theme(legend.position = "bottom")
grid.arrange(p1,p2,nrow=1)
p3<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("SHUCK vs VOLUME by TYPE")+theme(legend.position = "bottom")
p4<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = TYPE,shape = CLASS),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by TYPE")+theme(legend.position = "bottom")
grid.arrange(p3,p4,nrow=1)
require(moments)
require(ggplot2)
prices <- read.csv(file.path("C:/NorthWestern_Courses/MSPA-401-Introduction-to-Statistical-Analysis/Code and Data/","homes.csv"),sep=",")
str(prices)
summary(prices)
baths <- factor(prices$Baths)
fire <- factor(prices$Fire)
S <- prices$Sales
T <- prices$Taxes
prices <- data.frame(prices, S, T, baths, fire)
str(prices)
ms <- aggregate(S~(baths+fire), data = prices, mean)
mt <- aggregate(T~(baths+fire), data = prices, mean)
mt <- mt[,3]
overview <- cbind(ms,mt)
colnames(overview) <- c("Baths","Fireplaces", "Sales Price", "Taxes")
overview
par(mfrow = c(1,2))
boxplot(S~fire, main = "Sales Price by Fireplaces", col = "red", ylab = "Sales Price",
xlab = "Number of Fireplaces")
boxplot(S~baths, main = "Sales Price by Baths", col = "blue", ylab = "Sales Price",
xlab = "Number of Baths")
par(mfrow = c(1,1))
p <- ggplot(prices, aes(x = T, y = S))+geom_point(aes(color = baths), size = 4)+
ggtitle("Plot of Sales Price versus Taxes Colored by Number of Baths")
p
g <- ggplot(prices, aes(x = T, y = S))+geom_point(aes(color = fire), size = 4)+
ggtitle("Plot of Sales Price versus Taxes Colored by Number of Fireplaces")
g
boxplot(S~baths, main = "Sales Price by Baths", col = "blue", ylab = "Sales Price",
xlab = "Number of Baths")
s1 <- S[baths == "1"]
s15 <- S[baths == "1.5"]
t.test(s15,s1,alternative=c("two.sided"),mu=0,paired=FALSE)
# DO NOT ADD OR REVISE CODE HERE
knitr::opts_chunk$set(echo = FALSE)
# For students:  a = TRUE, b = FALSE
# To knit instructions:  a = FALSE, b = TRUE
a <- TRUE
b <- FALSE
# Perform the following steps to start the assignment.
# 1) Load/attach the following packages via library():  flux, ggplot2, gridExtra, moments, rockchalk, car.
# NOTE:  packages must be installed via install.packages() before they can be loaded.
library(flux)
library(ggplot2)
library(gridExtra)
library(moments)
library(rockchalk)
library(car)
# 2) Use the "mydata.csv" file from Assignment #1 or use the file posted on the course site.  Reading
# the files into R will require sep = "" or sep = " " to format data properly.  Use str() to check file
# structure.
# mydata <- read.csv("mydata.csv", sep = ",")
# mydata <- read.csv(file.path("c:...", "mydata.csv"), sep = ",")
mydata <- read.csv(file.path("mydata.csv"), sep = ",")
str(mydata)
ratio <- mydata$RATIO
par(mfrow = c(1,2))
hist(ratio, main = "Histogram of RATIO", col = "red", xlab = "RATIO")
qqnorm(ratio, col = "blue", main = "Q-Q plot of RATIO")
qqline(ratio, col = "red")
par(mfrow = c(1,1))
print("Skewness of RATIO:")
rockchalk::skewness(ratio,unbiased = FALSE)
print("Kurtosis of RATIO:")
rockchalk::kurtosis(ratio,excess=FALSE, unbiased = FALSE)
L_RATIO<- log10(mydata$RATIO)
par(mfrow = c(1,2))
hist(L_RATIO, main = "Histogram of L_RATIO", col = "red", xlab = "L_RATIO")
qqnorm(L_RATIO, col = "blue", main = "Q-Q plot of L_RATIO")
qqline(L_RATIO, col = "red")
par(mfrow = c(1,1))
print("Skewness of L_RATIO:")
rockchalk::skewness(L_RATIO,unbiased = FALSE)
print("Kurtosis of L_RATIO:")
rockchalk::kurtosis(L_RATIO,excess=FALSE, unbiased = FALSE)
boxplot(log10(RATIO)~CLASS, col = "green", range = 1.5, data = mydata, main = "Box plot of L_RATIO by CLASS")
bartlett.test(L_RATIO ~ CLASS, mydata)
anova1 <- aov(L_RATIO ~ CLASS*SEX, data=mydata)
summary(anova1)
anova2 <- aov(L_RATIO ~ CLASS+SEX, data=mydata)
summary(anova2)
# library(HH)
# interaction2wt(L_RATIO~CLASS*SEX, data=mydata)
TukeyHSD(anova2)
mydata$TYPE <- combineLevels(mydata$SEX, levs = c("F","M"), "ADULT")
par(mfrow = c(1,2))
hist(mydata[mydata[,11]=="I", "VOLUME"],  col = "red", main = "Infant VOLUME", xlab = "")
hist(mydata[mydata[,11]=="ADULT", "VOLUME"],  col = "green", main = "Adult VOLUME", xlab = "")
par(mfrow = c(1,1))
L_SHUCK<-log10(mydata$SHUCK)
L_VOLUME<-log10(mydata$VOLUME)
library(gridExtra)
p1<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("SHUCK vs VOLUME by CLASS")+theme(legend.position = "bottom")
p2<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by CLASS")+theme(legend.position = "bottom")
grid.arrange(p1,p2,nrow=1)
p3<-ggplot(data = mydata, aes(x = VOLUME, y = SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("SHUCK vs VOLUME by TYPE")+theme(legend.position = "bottom")
p4<-ggplot(data=mydata,aes(x = L_VOLUME, y = L_SHUCK)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("L_SHUCK vs L_VOLUME by TYPE")+theme(legend.position = "bottom")
grid.arrange(p3,p4,nrow=1)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model1)
anova(model,model1)
residual<-model$residuals
par(mfrow = c(1,2))
hist(residual, main = "Histogram of Residuals", col = "darkgreen", xlab = "Residuals")
qqnorm(residual, col = "blue", main = "Q-Q plot of Residuals")
qqline(residual, col = "red")
par(mfrow = c(1,1))
print("Skewness of Residual:")
moments::skewness(residual)
print("Kurtosis of Residual:")
moments::kurtosis(residual)
p1<-ggplot(data = mydata, aes(x = L_VOLUME, y = residual)) +
geom_point(aes(color = CLASS),size = 2) + ggtitle("Residuals vs L_VOLUME by CLASS")+theme(legend.position = "right")
p2<-ggplot(data=mydata,aes(x = L_VOLUME, y = residual)) +
geom_point(aes(color = TYPE),size = 2) + ggtitle("Residuals vs L_VOLUME by TYPE")+theme(legend.position = "right")
p3<-ggplot(mydata, aes(x=CLASS, y=residual, fill=CLASS)) +   geom_boxplot()+ggtitle("Box plot of Residuals by CLASS")
p4<-ggplot(mydata, aes(x=TYPE, y=residual, fill=TYPE)) +   geom_boxplot()+ggtitle("Box plot of Residuals by TYPE")
grid.arrange(p1,p2,p3,p4,nrow=2)
bartlett.test(residual ~ CLASS, mydata)
idxi <- mydata$TYPE == "I"
idxa <- mydata$TYPE == "ADULT"
max.v <- max(mydata$VOLUME)
min.v <- min(mydata$VOLUME)
delta <- (max.v - min.v)/10000
prop.infants <- numeric(10000)
prop.adults <- numeric(10000)
volume.value <- numeric(10000)
total.infants <- sum(idxi)
total.adults <- sum(idxa)
for (k in 1:10000) {
value <- min.v + k*delta
volume.value[k] <- value
prop.infants[k] <- sum(mydata$VOLUME[idxi] <= value)/total.infants
prop.adults[k] <-  sum(mydata$VOLUME[idxa] <= value)/total.adults
}
# prop.infants shows the impact of increasing the volume cutoff for
# harvesting. The following code shows how to "split" the population at
# a 50% harvest of infants.
n.infants <- sum(prop.infants <= 0.5)
split.infants <- min.v + (n.infants + 0.5)*delta  # This estimates the desired volume.
split.infants
n.adults <- sum(prop.adults <= 0.5)
split.adults <- min.v + (n.adults + 0.5)*delta
split.adults
head(volume.value)
head(prop.infants)
head(prop.adults)
df <- data.frame(volume.value,prop.adults,prop.infants)
p<-ggplot(data = df, aes(x =volume.value)) +
geom_line(aes(y = prop.adults, colour = "Adults")) +
geom_line(aes(y = prop.infants, colour = "Infants")) +
scale_colour_manual("",
breaks = c("Adults", "Infants"),
values = c( "darkblue","red")) +
labs(title = "Proportion of Adults and Infants Protected",x = "Volume", y = "Proportion")
p+geom_hline(yintercept=0.5) + geom_vline(xintercept = c(split.infants,split.adults))+geom_text(aes(split.infants,0.5,label = round(split.infants,2), hjust = -0.25,vjust=1.5))+geom_text(aes(split.adults,0.5,label = round(split.adults,2), hjust = -0.25,vjust=1.5))
difference<-((1 - prop.adults) - (1 - prop.infants))
head(difference)
y.loess.a <- loess(1 - prop.adults ~ volume.value, span = 0.25,
family = c("symmetric"))
y.loess.i <- loess(1 - prop.infants ~ volume.value, span = 0.25,
family = c("symmetric"))
smooth.difference <- predict(y.loess.a) - predict(y.loess.i)
df1<-data.frame(volume.value,difference,smooth.difference)
p<-ggplot(data = df1, aes(x =volume.value)) +
geom_line(aes(y = difference, colour = "Difference")) +
geom_line(aes(y = smooth.difference, colour = "Smoothed Difference")) +
scale_colour_manual("",
breaks = c("Difference", "Smoothed Difference"),
values = c( "blue","red")) +
labs(title = "Difference in Harvest Proportions",x = "Volume", y = "Difference in Proportions Harvested")
p+geom_vline(xintercept = volume.value[which.max(smooth.difference)],linetype=3,lwd=1.5)+geom_text(aes(volume.value[which.max(smooth.difference)],0.1,label = (paste("volume = ", round(volume.value[which.max(smooth.difference)],3))), hjust = -0.1,vjust=1.5,angle=90))
FPR<-(1 - prop.infants)[which.max(smooth.difference)] # [1] 0.1764706
TPR<-(1 - prop.adults)[which.max(smooth.difference)]
max.difference<-round(c(Volume=volume.value[which.max(smooth.difference)],TPR=TPR,FPR=FPR,PropYield=1-sum(mydata$VOLUME <= volume.value[which.max(smooth.difference)])/nrow(mydata)),3)
max.difference
vol2<-volume.value[volume.value > max(mydata[mydata$CLASS == "A1" &
mydata$TYPE == "I", "VOLUME"])][1] # [1] 206.786
FPR<-(1 - prop.infants)[which(volume.value==vol2)]
TPR<-(1 - prop.adults)[which(volume.value==vol2)]
zero.A1.infants<-round(c(Volume=vol2,TPR=TPR,FPR=FPR,PropYield=1-sum(mydata$VOLUME <= vol2)/nrow(mydata)),3)
zero.A1.infants
vol3<-volume.value[which.min(abs(prop.adults - (1-prop.infants)))] # [1] 237.6391
FPR<-(1 - prop.infants)[which(volume.value==vol3)]
TPR<-(1 - prop.adults)[which(volume.value==vol3)]
equal.error<-round(c(Volume=vol3,TPR=TPR,FPR=FPR,PropYield=1-sum(mydata$VOLUME <= vol3)/nrow(mydata)),3)
equal.error
x.p<-c(max.difference[[3]],equal.error[[3]],zero.A1.infants[[3]])
y.p<-c(max.difference[[2]],equal.error[[2]],zero.A1.infants[[2]])
nms<-c(paste("max.difference\n vol=",max.difference[[1]]),paste("equal harvest\n vol=",equal.error[[1]]),paste("zero A1 infants\n vol=",zero.A1.infants[[1]]))
nms
plot((1-prop.infants),(1-prop.adults), col="blue",type="l",lwd=2,main="ROC curve of adult and infant harvest proportions",xlab="Infant harvest proportion",ylab="Adult harvest proportion")
abline(0,1,col="red",lw=2,lty = 2)
points(x.p,y.p,pch="O",col="red")
text(x.p[1], y.p[1]-0.03, labels=nms[1], cex= 0.7,pos=4)
text(x.p[2], y.p[2]+0.05, labels=nms[2], cex= 0.7,pos=2)
text(x.p[3], y.p[3]-0.03, labels=nms[3], cex= 0.7,pos=4)
cat("Area under the curve:", round(auc((1-prop.infants),(1-prop.adults)),3))
library(knitr)
kable(data.frame(rbind(max.difference,zero.A1.infants,equal.error)))
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME + CLASS,data=mydata)
summary(model1)
anova(model,model1)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME + CLASS*TYPE,data=mydata)
summary(model1)
anova(model,model1)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model<-lm(L_SHUCK ~ L_VOLUME + CLASS,data=mydata)
summary(model)
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME + CLASS,data=mydata)
summary(model1)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME + CLASS,data=mydata)
summary(model1)
model2<-lm(L_SHUCK ~ L_VOLUME + TYPE,data=mydata)
summary(model2)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME + CLASS,data=mydata)
summary(model1)
model2<-lm(L_SHUCK ~ L_VOLUME,data=mydata)
summary(model2)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME + CLASS,data=mydata)
summary(model1)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME + CLASS,data=mydata)
summary(model1)
anova(model,model1)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME + TYPE,data=mydata)
summary(model1)
anova(model,model1)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME ,data=mydata)
summary(model1)
anova(model,model1)
model1<-lm(L_SHUCK ~ CLASS + TYPE ,data=mydata)
summary(model1)
model1<-lm(L_SHUCK ~ CLASS ,data=mydata)
summary(model1)
model1<-lm(L_SHUCK ~ TYPE ,data=mydata)
summary(model1)
anova(model,model1)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
index <- (mydata$CLASS == "A5") | (mydata$CLASS == "A4")
mydata$TYPE[index] <- combineLevels(mydata$TYPE[index],
levs = c("I", "ADULT"), "ADULT")
# Or, alternatively:
# mydata$TYPE[with(mydata, CLASS=='A4' | CLASS=='A5')] <- 'ADULT'
model<-lm(L_SHUCK ~ L_VOLUME + CLASS + TYPE,data=mydata)
summary(model)
model1<-lm(L_SHUCK ~ L_VOLUME + CLASS,data=mydata)
summary(model1)
bartlett.test(L_SHUCK~CLASS,mydata)
bartlett.test(L_SHUCK~TYPE,mydata)
bartlett.test(L_VOLUME~TYPE,mydata)
bartlett.test(L_VOLUME~CLASS,mydata)
